# by default, the Ghost image will use SQLite (and thus requires no separate database container)
# we have used MySQL here merely for demonstration purposes (especially environment-variable-based configuration)

version: '3.1'

services:

  db:
    container_name: mysql-server
    image: docker.io/mysql/mysql-server:5.7
    ports:
      - 3306:3306
    restart: always
    volumes:
      # Delegate to Docker the creation of a volume
      #- db_data:/var/lib/mysql
      # Specify where to create place the files
      - ./persistance/mysql5:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ./db_root_password
      #MYSQL_ROOT_PASSWORD: GT/4=8Dy.*G{Cztx
      MYSQL_DATABASE: ghost
      MYSQL_USER: ghost
      # This value has to be the same as WORDPRESS_DB_PASSWORD
      MYSQL_PASSWORD: ./db_password

  ghost:
    container_name: ghost-web
    image: ghost:4-alpine
    ports:
      - 8080:2368
    restart: always
    volumes:
      # Delegate to Docker the creation of a volume
      #- ghost_data:/var/lib/ghost/content
      # Specify where to create place the files
      - ./persistance/ghost:/var/lib/ghost/content
    environment:
      # see https://ghost.org/docs/config/#configuration-options
      database__client: mysql
      database__connection__host: db
      database__connection__user: ghost
      database__connection__password: ./db_password
      database__connection__database: ghost
      # this url value is just an example, and is likely wrong for your environment!
      url: http://localhost:8080
      # contrary to the default mentioned in the linked documentation, this image defaults to NODE_ENV=production (so development mode needs to be explicitly specified if desired)
      NODE_ENV: production

secrets:
  db_password:
    file: db_ghost_password.txt
  db_root_password:
    file: db_root_password.txt

volumes:
  db_data: {}
  ghost_data: {}
